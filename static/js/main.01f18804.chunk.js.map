{"version":3,"sources":["Components/Header.jsx","Components/Inventory.jsx","Components/ScheduleDialog.jsx","Components/CustomerList.jsx","Components/Agenda.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","LightTooltip","withStyles","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","Tooltip","Header","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","Typography","variant","ButtonGroup","Button","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","createData","name","itemID","amount","price","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","type","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","clsx","component","width","paper","table","minWidth","height","border","clip","margin","overflow","top","Inventory","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","target","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","ScheduleDialog","setOpen","Dialog","DialogTitle","DialogContent","TextField","autoFocus","fullWidth","InputLabelProps","shrink","required","DialogActions","custEmail","custPhone","CustomerList","maxWidth","pos","Agenda","Card","CardContent","gutterBottom","bicycleType","dateTime","CardActions","float","elevation","textAlign","display","justifyContent","App","jobs","Grid","container","item","xs","sm","job","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01f18804.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 20,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Employee Dashboard\r\n          </Typography>\r\n          <ButtonGroup color=\"inherit\">\r\n            <LightTooltip title=\"Store Updates\">\r\n              <Button>\r\n                News\r\n              </Button>\r\n            </LightTooltip>\r\n            <LightTooltip title=\"Open Employee Chat\">\r\n              <Button>\r\n                Messages\r\n              </Button>\r\n            </LightTooltip>\r\n          </ButtonGroup>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, itemID, amount, price) {\r\n  return { name, itemID, amount, price };\r\n}\r\n\r\nconst rows = [\r\n  createData('Mountain Bike 1', 233, 20, 400),\r\n  createData('Road Bike 1', 452, 25, 600),\r\n  createData('Spare tire', 262, 124, 25.99),\r\n  createData('CO2', 159, 400, 9.99),\r\n  createData('Bike Pump', 356, 50, 49.99),\r\n  createData('Bike Rack', 408, 20, 89.99),\r\n  createData('Energy drink', 237, 230, 4.99),\r\n  createData('Alum Wrench', 375, 50, 5.99),\r\n  createData('helmet', 518, 45, 14.99),\r\n  createData('Water Bottle', 392, 500, 3.99),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Product' },\r\n  { id: 'itemID', numeric: true, disablePadding: false, label: 'Item ID' },\r\n  { id: 'amount', numeric: true, disablePadding: false, label: 'Amount' },\r\n  { id: 'price', numeric: true, disablePadding: false, label: 'Price ($)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all Products' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Inventory\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    height: 375,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst Inventory = () => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('itemID');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'small'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.itemID}</TableCell>\r\n                      <TableCell align=\"right\">{row.amount}</TableCell>\r\n                      <TableCell align=\"right\">{row.price}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (33) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction ScheduleDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        Schedule Repair\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Schedule Repair</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Customer Name\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            variant='outlined'\r\n            margin=\"dense\"\r\n            id=\"bicycleType\"\r\n            label=\"Bicycle Type\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            variant='outlined'\r\n            margin=\"dense\"\r\n            id=\"datetime\"\r\n            label=\"Date/Time\"\r\n            type=\"datetime-local\"\r\n            InputLabelProps={{shrink: true, required: true}}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Submit\r\n          </Button> \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduleDialog;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, custEmail, custPhone) {\r\n  return { name, custEmail, custPhone};\r\n}\r\n\r\nconst rows = [\r\n  createData('Ruairi Blake', 'Blakerc@Mail.uc.edu', '(614)531-6122'),\r\n  createData('Lando Calrissian', 'resistanceLando@spacegmail.com', '(555)123-1234'),\r\n  createData('Indiana Jones', 'indy@marshallcollege.edu', '(555)111-2222'),\r\n  createData('Alan Turing', 'Alan@idontthinkemailexisted.com', '(555)543-1234'),\r\n  createData('Rick Astley', 'N3vrG1v3UUp@yahoo.com', '(248)434-5508'),\r\n  createData('Tommy Tutone', 'Tommy@columbiarecords.com', \"867-5309\"),\r\n  createData('James Bond', 'Bondjames@MI6.gov', '(007)111-1953'),\r\n  createData('Master Chief', 'J117@UNSC.com', '(117)211-2525'),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Customer Name' },\r\n  { id: 'custEmail', numeric: false, disablePadding: true, label: 'Email' },\r\n  { id: 'custPhone', numeric: false, disablePadding: true, label: 'Phone Number' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all Customers' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Our Customers\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    height: 370,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nfunction CustomerList(){\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'small'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\">{row.custEmail}</TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\">{row.custPhone}</TableCell>\r\n                      \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (33) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerList;","import React from 'react';\r\nimport './../App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 250,\r\n      maxWidth: 250,\r\n      marginBottom: 5,\r\n      height: 175,\r\n      padding: 1,\r\n      align: 'center',\r\n      color: 'green',\r\n    },\r\n    title: {\r\n      fontSize: 13,\r\n    },\r\n    pos: {\r\n      marginBottom: 5,\r\n    },\r\n  });\r\n\r\n\r\nfunction Agenda(props){\r\n    const classes = useStyles();\r\n    return(\r\n        <Card className={classes.root} variant='outlined'>\r\n        <CardContent>\r\n          <Typography className={classes.title} color='textPrimary' gutterBottom>\r\n            {props.name}\r\n          </Typography>\r\n          <Typography variant='h6' component='h6'>\r\n          {props.bicycleType}\r\n          </Typography>\r\n          <Typography variant='body2' component='p'>\r\n          {props.dateTime}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size='small'>Customer Details</Button>\r\n          <Tooltip title='Complete Job'>\r\n            <Button size='small' variant='contained'>\r\n              <IconButton float='right' aria-label='Confirm' color='primary'>\r\n                <CheckIcon />\r\n              </IconButton>\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title='Delete Job'>\r\n            <Button size='small' variant='contained'>\r\n              <IconButton aria-label='delete' color='secondary'>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Button>\r\n          </Tooltip>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default Agenda\r\n\r\n\r\n","import React from 'react';\nimport Header from './Components/Header';\nimport Inventory from './Components/Inventory';\nimport './App.css';\nimport ScheduleDialog from './Components/ScheduleDialog';\nimport CustomerList from './Components/CustomerList';\nimport Agenda from './Components/Agenda';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useState } from 'react';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n    elevation: 3,\n  },\n  paper: {\n    padding: 10,\n    textAlign: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    elevation: 3,\n  },\n}));\n\nfunction App(){\n\n  const [jobs, setJob] = useState([\n    { name: 'Ruairi Blake', bicycleType: 'Road bike', dateTime: '12/20/2020 2:30PM'},\n    { name: 'Ed green', bicycleType: 'Mountian bike', dateTime: '12/24/2020 1:20PM'},\n    { name: 'Helpma Bikebroke', bicycleType: 'Racing Bike', dateTime: '1/4/2021 12:00PM'}\n  ]);\n\nconst classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <div>\n        <Grid container spacing ={3}>\n          <Grid item xs={7} sm={7}>\n            <Paper className={classes.paper}>\n            <ScheduleDialog />\n              {jobs.map(job => (\n        <Agenda name={job.name} bicycleType={job.bicycleType} dateTime={job.dateTime} />\n        \n        ))}  \n            </Paper>\n          </Grid>\n        <Grid item xs={7} sm={5} >\n          <Paper className={classes.paper}>\n            <CustomerList />\n          </Paper>\n        </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Inventory/>\n            </Paper>\n          </Grid>\n        </Grid> \n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}